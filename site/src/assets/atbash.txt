#-------------------------------------------------------------------------------
# Name:        Atbash
# Purpose:
#
# Author:      a.Akgonul
#
# Created:     05/12/2017
# Copyright:   (c) A.AKGONUL 2017
#-------------------------------------------------------------------------------
def Chiffrement(message): # Mise en place de la fonction qui encodera le message
    translated = ''

    for character in message : # Pour tous les caracteres dans la chaîne "message"
        if (character < 'A' or character > 'z' ):
            print('character invalide')
        elif character >= 'a' and character <= 'z': # On vérifie que les characteres du message sont compris entre a et z en minuscule
            translated += chr (219-ord (character)) # On transfome la lettre en chiffre ASCII avec la fonction "chr" pour permettre son traitement, ensuite on retransforme en lettre avec "ord"
        elif character >= 'A' and character <= 'Z': # La même chose pour les lettres en Majuscules
            translated += chr(155-ord(character))
        else:
             translated = translated + character    # On additionne les caractères codés pour qu'ils soient tous affichés à la sortie


    return translated

# Encoding
message= "" # Définition de la variable
message= input("Entrez votre message: ") # Choix du message à coder
messageApresTraitement = Chiffrement(message) # Application de la fonction défini au dessus
print(messageApresTraitement ) # Affiche le message après le traitement

# Decoding
message = ""
message = Chiffrement(messageApresTraitement )
print(message)
input('Appuyez sur ENTREE pour quitter')
